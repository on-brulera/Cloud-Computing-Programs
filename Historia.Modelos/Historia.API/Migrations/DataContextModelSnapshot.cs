// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Historia.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Historia.Modelos.Dios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Elemento")
                        .HasColumnType("TEXT");

                    b.Property<int>("MitologiaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreDivino")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombrePopular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MitologiaId");

                    b.ToTable("Dioses");
                });

            modelBuilder.Entity("Historia.Modelos.Mitologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaOrigen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaisOrigen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mitologias");
                });

            modelBuilder.Entity("Historia.Modelos.Dios", b =>
                {
                    b.HasOne("Historia.Modelos.Mitologia", "Mitologia")
                        .WithMany("Dioses")
                        .HasForeignKey("MitologiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mitologia");
                });

            modelBuilder.Entity("Historia.Modelos.Mitologia", b =>
                {
                    b.Navigation("Dioses");
                });
#pragma warning restore 612, 618
        }
    }
}
